package minic;
import java_cup.runtime.*;
import java.io.FileReader;

action code{:
:};

parser code{:
    public void syntax_error(Symbol s)
    {
        Token t = (Token)s.value;
        report_error("Error Sintactico cerca de < " + t.getContenido() + " > linea " + t.getLinea() + ", columna " + t.getColumna(), null);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception 
    {
        //report_fatal_error("Fatal Error: " + s.value, null);
    }
:};

non terminal Token S, Main, Codigo, DeclaracionVariables, ListaVariables, ListaVariablesComa,
AsignacionVariable, InicializacionArreglo, InicializacionArregloComa, IncrementarDecrementarVariable, OperacionAritmetica1, OperacionAritmetica2,
OperacionAritmetica3, If, Else, While, For, ForInicializacion, ForInicializacionComa, ForActualizacion, ForActualizacionComa,
Condicion, CondicionOperadorLogico;

terminal Token tipoVariable, nombreVariable, IF, ELSE, WHILE, FOR, TRUE, FALSE,
MAIN, RETURN, corcheteIzquierdo, corcheteDerecho, llaveIzquierda, llaveDerecha,
constChar, constStr, parentesisIzquierdo, parentesisDerecho, igual, printf, scanf,
operadorAritmeticoIgual, operadorSuma, operadorResta, operadorMultiplicacion, operadorDivision, operadorIncrementoDecremento,
operadorRelacional, operadorLogico, entero, puntoYComa, coma, parametroScanf, and;

start with S;

S ::= Main;

Main ::= tipoVariable MAIN parentesisIzquierdo parentesisDerecho llaveIzquierda Codigo RETURN entero puntoYComa llaveDerecha;

Codigo ::= DeclaracionVariables Codigo
         | AsignacionVariable Codigo
         | IncrementarDecrementarVariable Codigo
         | While Codigo
         | If Codigo
         | For Codigo
         |;

DeclaracionVariables ::= tipoVariable ListaVariables puntoYComa;
ListaVariables ::= nombreVariable ListaVariablesComa
                 | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho ListaVariablesComa
                 | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho igual llaveIzquierda InicializacionArreglo llaveDerecha ListaVariablesComa
                 | nombreVariable corcheteIzquierdo corcheteDerecho igual llaveIzquierda InicializacionArreglo llaveDerecha ListaVariablesComa
                 | nombreVariable igual OperacionAritmetica1 ListaVariablesComa
                 | nombreVariable igual constChar ListaVariablesComa
                 | nombreVariable igual constStr ListaVariablesComa;
ListaVariablesComa ::= coma ListaVariables
                     |;

AsignacionVariable ::= nombreVariable igual OperacionAritmetica1 puntoYComa
                     | nombreVariable operadorAritmeticoIgual OperacionAritmetica1 puntoYComa
                     | nombreVariable igual constChar puntoYComa
                     | nombreVariable igual constStr puntoYComa
                     | nombreVariable igual llaveIzquierda InicializacionArreglo llaveDerecha puntoYComa
                     | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho igual OperacionAritmetica1 puntoYComa
                     | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho operadorAritmeticoIgual OperacionAritmetica1 puntoYComa
                     | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho igual constChar puntoYComa
                     | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho igual constStr puntoYComa
                     | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho igual nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho puntoYComa
                     | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho operadorAritmeticoIgual nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho puntoYComa;

InicializacionArreglo ::= OperacionAritmetica1 InicializacionArregloComa
                        | constChar InicializacionArregloComa
                        | constStr InicializacionArregloComa;
InicializacionArregloComa ::= coma InicializacionArreglo
                            |;

IncrementarDecrementarVariable ::= nombreVariable operadorIncrementoDecremento puntoYComa
                                 | operadorIncrementoDecremento nombreVariable puntoYComa
                                 | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho operadorIncrementoDecremento puntoYComa
                                 | operadorIncrementoDecremento nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho puntoYComa;

OperacionAritmetica1 ::= OperacionAritmetica1 operadorSuma OperacionAritmetica2
                       | OperacionAritmetica1 operadorResta OperacionAritmetica2
                       | OperacionAritmetica2;
OperacionAritmetica2 ::= OperacionAritmetica2 operadorMultiplicacion OperacionAritmetica3
                       | OperacionAritmetica2 operadorDivision OperacionAritmetica3
                       | OperacionAritmetica3;
OperacionAritmetica3 ::= entero
                       | nombreVariable
                       | parentesisIzquierdo OperacionAritmetica1 parentesisDerecho;

If ::= IF parentesisIzquierdo Condicion parentesisDerecho llaveIzquierda Codigo llaveDerecha Else;
Else ::= ELSE IF parentesisIzquierdo Condicion parentesisDerecho llaveIzquierda Codigo llaveDerecha Else
       | ELSE llaveIzquierda Codigo llaveDerecha
       |;

While ::= WHILE parentesisIzquierdo Condicion parentesisDerecho llaveIzquierda Codigo llaveDerecha;

For ::= FOR parentesisIzquierdo ForInicializacion puntoYComa Condicion puntoYComa ForActualizacion parentesisDerecho llaveIzquierda Codigo llaveDerecha
      | FOR parentesisIzquierdo puntoYComa Condicion puntoYComa ForActualizacion parentesisDerecho llaveIzquierda Codigo llaveDerecha
      | FOR parentesisIzquierdo ForInicializacion puntoYComa Condicion puntoYComa parentesisDerecho llaveIzquierda Codigo llaveDerecha
      | FOR parentesisIzquierdo puntoYComa Condicion puntoYComa parentesisDerecho llaveIzquierda Codigo llaveDerecha;
ForInicializacion ::= tipoVariable nombreVariable igual OperacionAritmetica1 ForInicializacionComa                    
                    | tipoVariable nombreVariable igual constChar ForInicializacionComa
                    | tipoVariable nombreVariable igual constStr ForInicializacionComa
                    | nombreVariable igual OperacionAritmetica1 ForInicializacionComa
                    | nombreVariable igual constChar ForInicializacionComa
                    | nombreVariable igual constStr ForInicializacionComa;
ForInicializacionComa ::= coma ForInicializacion
                        |;
ForActualizacion ::= nombreVariable igual OperacionAritmetica1 ForActualizacionComa
                   | nombreVariable operadorAritmeticoIgual OperacionAritmetica1 ForActualizacionComa
                   | nombreVariable operadorIncrementoDecremento ForActualizacionComa
                   | operadorIncrementoDecremento nombreVariable ForActualizacionComa;
ForActualizacionComa ::= coma ForActualizacion
                       |;

Condicion ::= OperacionAritmetica1 operadorRelacional OperacionAritmetica1 CondicionOperadorLogico
            | OperacionAritmetica1 operadorRelacional constChar CondicionOperadorLogico
            | OperacionAritmetica1 operadorRelacional constStr CondicionOperadorLogico
            | constChar operadorRelacional nombreVariable CondicionOperadorLogico
            | constStr operadorRelacional nombreVariable CondicionOperadorLogico
            | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho operadorRelacional OperacionAritmetica1 CondicionOperadorLogico
            | OperacionAritmetica1 operadorRelacional nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho CondicionOperadorLogico
            | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho operadorRelacional nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho CondicionOperadorLogico
            | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho operadorRelacional constChar CondicionOperadorLogico
            | nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho operadorRelacional constStr CondicionOperadorLogico
            | constChar operadorRelacional nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho CondicionOperadorLogico
            | constStr operadorRelacional nombreVariable corcheteIzquierdo OperacionAritmetica1 corcheteDerecho CondicionOperadorLogico
            | parentesisIzquierdo Condicion parentesisDerecho CondicionOperadorLogico;
CondicionOperadorLogico ::= operadorLogico Condicion
                      |;