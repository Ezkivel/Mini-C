package minic;
import java_cup.runtime.*;
import java.io.FileReader;

action code{:
:};

parser code{:
    public void syntax_error(Symbol s)
    {
        Token t = (Token)s.value;
        report_error("Error Sintactico cerca de < " + t.getContenido() + " > linea " + t.getLinea() + ", columna " + t.getColumna(), null);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception 
    {
        //report_fatal_error("Fatal Error: " + s.value, null);
    }
:};

non terminal Token S, Main, Codigo, Variable, DeclaracionVariables, ListaVariables, ListaVariablesComa,
AsignacionVariable, AsignacionVariableComa,
InicializacionArreglo, InicializacionArregloComa, IncrementarDecrementarVariable, ElementoDeUnArreglo,
OperacionAritmetica, OperacionAritmetica2, OperacionAritmetica3,
If, Else, While, For, ForInicializacion, ForInicializacion2, ForInicializacionComa, ForActualizacion, ForActualizacionComa, Condicion, CondicionOperadorLogico;

terminal Token tipoVariable, nombreVariable, IF, ELSE, WHILE, FOR, TRUE, FALSE,
MAIN, RETURN, corcheteIzquierdo, corcheteDerecho, llaveIzquierda, llaveDerecha,
constChar, constStr, parentesisIzquierdo, parentesisDerecho, igual, printf, scanf,
operadorAritmeticoIgual, operadorSuma, operadorResta, operadorMultiplicacion, operadorDivision, operadorIncrementoDecremento,
operadorRelacional, operadorLogico, entero, puntoYComa, coma, parametroScanf, and;

start with S;

S ::= Main;

Main ::= tipoVariable MAIN parentesisIzquierdo parentesisDerecho llaveIzquierda Codigo RETURN entero puntoYComa llaveDerecha;

Codigo ::= DeclaracionVariables Codigo
         | AsignacionVariable Codigo
         | IncrementarDecrementarVariable Codigo
         | While Codigo
         | If Codigo
         | For Codigo
         |;

If ::= IF parentesisIzquierdo Condicion parentesisDerecho llaveIzquierda Codigo llaveDerecha Else;
Else ::= ELSE IF parentesisIzquierdo Condicion parentesisDerecho llaveIzquierda Codigo llaveDerecha Else
       | ELSE llaveIzquierda Codigo llaveDerecha
       |;

While ::= WHILE parentesisIzquierdo Condicion parentesisDerecho llaveIzquierda Codigo llaveDerecha;

For ::= FOR parentesisIzquierdo ForInicializacion puntoYComa Condicion puntoYComa ForActualizacion parentesisDerecho llaveIzquierda Codigo llaveDerecha
      | FOR parentesisIzquierdo puntoYComa Condicion puntoYComa ForActualizacion parentesisDerecho llaveIzquierda Codigo llaveDerecha
      | FOR parentesisIzquierdo ForInicializacion puntoYComa Condicion puntoYComa parentesisDerecho llaveIzquierda Codigo llaveDerecha
      | FOR parentesisIzquierdo puntoYComa Condicion puntoYComa parentesisDerecho llaveIzquierda Codigo llaveDerecha
      | FOR parentesisIzquierdo puntoYComa puntoYComa parentesisDerecho llaveIzquierda Codigo llaveDerecha;
ForInicializacion ::= tipoVariable Variable ForInicializacionComa
                    | tipoVariable nombreVariable igual OperacionAritmetica ForInicializacionComa
                    | tipoVariable nombreVariable igual constChar ForInicializacionComa
                    | tipoVariable nombreVariable igual constStr ForInicializacionComa
                    | Variable igual OperacionAritmetica ForInicializacionComa
                    | Variable operadorAritmeticoIgual OperacionAritmetica ForInicializacionComa
                    | Variable igual constChar ForInicializacionComa
                    | Variable igual constStr ForInicializacionComa;
ForInicializacion2 ::= Variable igual OperacionAritmetica ForInicializacionComa
                     | Variable operadorAritmeticoIgual OperacionAritmetica ForInicializacionComa
                     | Variable igual constChar ForInicializacionComa
                     | Variable igual constStr ForInicializacionComa;
ForInicializacionComa ::= coma ForInicializacion2
                        |;
ForActualizacion ::= Variable igual OperacionAritmetica ForActualizacionComa
                   | Variable operadorAritmeticoIgual OperacionAritmetica ForActualizacionComa
                   | Variable igual constChar ForActualizacionComa
                   | Variable igual constStr ForActualizacionComa
                   | Variable operadorIncrementoDecremento ForActualizacionComa
                   | operadorIncrementoDecremento Variable ForActualizacionComa;
ForActualizacionComa ::= coma ForActualizacion
                       |;

Condicion ::= OperacionAritmetica operadorRelacional OperacionAritmetica CondicionOperadorLogico
            | OperacionAritmetica operadorRelacional constChar CondicionOperadorLogico
            | OperacionAritmetica operadorRelacional constStr CondicionOperadorLogico
            | constChar operadorRelacional OperacionAritmetica CondicionOperadorLogico
            | constStr operadorRelacional OperacionAritmetica CondicionOperadorLogico
            | parentesisIzquierdo Condicion parentesisDerecho CondicionOperadorLogico;
CondicionOperadorLogico ::= operadorLogico Condicion
                      |;

DeclaracionVariables ::= tipoVariable ListaVariables puntoYComa;
ListaVariables ::= Variable ListaVariablesComa
                 | nombreVariable igual OperacionAritmetica ListaVariablesComa
                 | nombreVariable igual constChar ListaVariablesComa
                 | nombreVariable igual constStr ListaVariablesComa
                 | nombreVariable corcheteIzquierdo OperacionAritmetica corcheteDerecho igual llaveIzquierda InicializacionArreglo llaveDerecha ListaVariablesComa
                 | nombreVariable corcheteIzquierdo corcheteDerecho igual llaveIzquierda InicializacionArreglo llaveDerecha ListaVariablesComa;
ListaVariablesComa ::= coma ListaVariables
                     |;

AsignacionVariable ::= Variable igual OperacionAritmetica AsignacionVariableComa
                     | Variable operadorAritmeticoIgual OperacionAritmetica AsignacionVariableComa
                     | Variable igual constChar AsignacionVariableComa
                     | Variable igual constStr AsignacionVariableComa;
AsignacionVariableComa ::= coma AsignacionVariable
                        | puntoYComa;

IncrementarDecrementarVariable ::= Variable operadorIncrementoDecremento puntoYComa
                                 | operadorIncrementoDecremento Variable puntoYComa;

Variable ::= nombreVariable
           | ElementoDeUnArreglo;

ElementoDeUnArreglo ::= nombreVariable corcheteIzquierdo OperacionAritmetica corcheteDerecho;

InicializacionArreglo ::= OperacionAritmetica InicializacionArregloComa
                        | constChar InicializacionArregloComa
                        | constStr InicializacionArregloComa;
InicializacionArregloComa ::= coma InicializacionArreglo
                            |;

OperacionAritmetica ::= OperacionAritmetica operadorSuma OperacionAritmetica2
                      | OperacionAritmetica operadorResta OperacionAritmetica2
                      | OperacionAritmetica2;
OperacionAritmetica2 ::= OperacionAritmetica2 operadorMultiplicacion OperacionAritmetica3
                       | OperacionAritmetica2 operadorDivision OperacionAritmetica3
                       | OperacionAritmetica3;
OperacionAritmetica3 ::= entero
                       | Variable
                       | parentesisIzquierdo OperacionAritmetica parentesisDerecho;